{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","img/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","a","fetchCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","map","country","i","key","url","fetchData","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","countries","name","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","CovidIamge","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7c3a577.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core'\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if (!confirmed) {\n        return'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cased of of covid 19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Recovered from covid 19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of Death caused by covid 19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\n\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import axios from 'axios';\nimport CountryPicker from '../components/CountryPicker/CountryPicker';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data:{ confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n        \n        return { confirmed, recovered, deaths, lastUpdate };       \n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return modifiedData;\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: {countries}} = await axios.get((`${url}/countries`));\n\n        return countries.map((country) => country.name)\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data:{confirmed, deaths, recovered}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length\n            ? (\n                <Line\n                    data={{\n                    labels: dailyData.map(({ date }) => date),\n                        datasets: [{\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                                label: 'Deaths',\n                                borderColor: 'red',\n                                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                                fill: true,\n                        }],\n                    }}\n                />) : null\n    );\n\n    console.log(confirmed, recovered, deaths);\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 2.5)',\n                                'rgba(0, 255, 0, 2.5)',\n                                'rgba(255, 0, 0, 2.5)',\n                            ],\n                            data:[confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: {display: true, text:`Current state in ${country}`},\n                    }}\n                />\n        ) : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport CovidIamge from './img/image.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({ data: fetchedData, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={CovidIamge} alt=\"covid19\"/>\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"img\":\"App_img__2TF4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}